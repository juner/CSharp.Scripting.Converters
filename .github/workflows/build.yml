name: .NET Core

on: 
  push:
  pull_request:
  release:
    types:
      - published
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # GitHub Packages Feed settings
  GITHUB_OWNER: junersproject
  GITHUB_FEED: ${{ "https://nuget.pkg.github.com/" + github.repository_owner +  "/index.json" }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - name: Restore (Windows)
        if: matrix.os == 'windows-latest'
        run: dotnet restore
      - name: Build (windows)
        if: matrix.os == 'windows-latest'
        run: dotnet build -c Release --no-restore
      - name: Build (other)
        if: matrix.os != 'windows-latest'
        run: |
          dotnet build test/CSharp.Scripting.Converters.Core.Tests -c Release
      - name: Test (windows)
        if: matrix.os == 'windows-latest'
        run: dotnet test -c Release --no-build
      - name: Test (other)
        if: matrix.os != 'windows-latest'
        run: |
          dotnet test test/CSharp.Scripting.Converters.Core.Tests -c Release --no-build
      - name: Pack
        if: matrix.os == 'windows-latest'
        run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=0.0.${GITHUB_RUN_ID}-alpha --output nupkg
      - name: Upload Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: ./nupkg/*